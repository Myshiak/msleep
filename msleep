#!/usr/bin/bash
sound_player=mpg123 # config
notify=false
notify_isnt_set=true # Do not change this variables
$notify && first_notify=true || first_notify=false
function usage() {
	echo 'Simple terminal based timer written in Bash'
	echo 'Usage:'
	echo '   --help    -h    Show this message'
	echo '   --version -v    Show version'; echo
	if $first_notify
	then
		echo '   --notify  -n    Disable notification'
	else
		echo '   --notify  -n    Enable notification'
	fi
	echo; echo 'Examples:'
	echo ' msleep ~/sound.mp3 1:1:30  # 1 hour,1 minute,30 seconds,play ~/sound.mp3'
	if $first_notify
	then
		echo ' msleep -n 2:45             # 2 minutes,45 seconds,disable notification'
	else
		echo ' msleep -n 2:45             # 2 minutes,45 seconds,enable notification'
	fi
	echo ' msleep sound.mp3 5         # 5 seconds,play sound.mp3'
}
[[ -z $1 ]] && usage
for i in $*
do
	if [[ $i == "--help" ]] || [[ $i == "-h" ]]
	then
		usage
		break
	elif [[ $i == "--version" ]] || [[ $i == "-v" ]]
	then
		echo "1.2.1"
		break
	elif [[ $i == "--notify" ]] && $notify_isnt_set || [[ $i == "-n" ]] && $notify_isnt_set
	then
		$notify && notify=false || notify=true
		notify_isnt_set=false
	elif [[ -e $i ]] || [[ -e $PWD/$i ]]
	then
		[[ -e $i ]] && sound=$i || sound="$PWD/$i"
	elif [[ $i =~ [0-9]+(:[0-9]+(:[0-9]+)?)? ]]
	then
		time_of=0
		tmpifs=$IFS
		IFS=":"
		index=0
		for j in $i
		do
			index=$((index+1))
		done
		case $index in
			1)
				for j in $i
				do
					time_of=$((time_of+j))
				done
			;;
			2)
				index=0
				for j in $i
				do
					[[ $index -eq 0 ]] && j=$((j*60))
					time_of=$((time_of+j))
					index=$((index+1))
				done
			;;
			3)
				index=0
				for j in $i
				do
					[[ $index -eq 0 ]] && j=$((j*3600)) || [[ $index -eq 1 ]] && j=$((j*60))
					time_of=$((time_of+j))
					index=$((index+1))
				done
			;;
		esac
		sleep $time_of
		IFS=$tmpifs
		if $notify
		then
			if command -v notify-send
			then
				notify-send "Msleep: Time $i is out"
			else
				echo "Msleep: Time $i is out"
			fi
		fi
		[[ -n $sound ]] && $sound_player $sound
		break
	fi
done
